import os 
import json
from bs4 import BeautifulSoup
import pandas as pd
from collections import Counter # table equivalent of R 
import re  # package for regular expressions

os.chdir('C:\\Users\\mnave\\Documents\\trip advisor')
# importing 774804 json file from the trip advisor directory
file = open("774804.json","r").read()
hoteldata = json.loads(file)
os.chdir('C:\\Users\\mnave\\Documents\\')
hotelinfo = hoteldata['HotelInfo']
reviews = hoteldata['Reviews']
# Create hotelinfo and reviews Data Frame at this step
hotelinfo = pd.DataFrame(hotelinfo,index=[0])
reviews = pd.DataFrame(reviews)
# This block involves functions to clean the data
# clean Adress with beautiful soap with "lxml"
# html parsing
cleanaddress = lambda x: BeautifulSoup(x,"lxml").text;
list(map(cleanaddress,hotelinfo.Address))
hotelinfo.replace(to_replace=list(hotelinfo["Address"]),
                  value=list(map(cleanaddress,hotelinfo.Address)),inplace=True)

# import cities and countries for proper comparison
location = open("location.txt","r",encoding='utf-8').read()
location = location.lower()
location= json.loads(location)
beta = [];
def countrycity(location):
    key = list(location.keys())
    for i in range(0,len(key)):
        for j in location[key[i]]:
            beta.append([key[i],j]);
    return beta       





# seperate city country in author location
authorlocationsplit = lambda x: x.split(','); 
#pd.DataFrame(list(map(authorlocationsplit,reviews.AuthorLocation)))
#pd.concat(reviews,pd.DataFrame(list(map(authorlocationsplit,reviews.AuthorLocation)),columns= ['AuthorCity','AuthorState']))                                       
# columns with text data
cols = ['Author','AuthorLocation','Content','Title']
reviews.loc[:,cols]=reviews.loc[:,cols].applymap(str.lower)
# Change Date column to date time format 
reviews.loc[:,'Date']= pd.to_datetime(reviews.Date)

# remove apostopehes and replace words
def aposcheckfun(x):
    if re.search('\'',x) is not None:
        return x

# Check Author for apostrophes
authorc = list(map(aposcheckfun,reviews.Author))
Counter(authorc)

authlocc = list(map(aposcheckfun,reviews.AuthorLocation))
Counter(authorc)
# No apostrophees for the above two
contentc = list(map(aposcheckfun,reviews.Content))
Counter(contentc)

contett = list(map(aposcheckfun,reviews.Title))
Counter(contett)


title = 

# remove special characters in content and title



#Convert Reviews column dict object to a new Data frame
reviews2=pd.concat([reviews,pd.DataFrame(list(reviews['Ratings']))],axis=0)















